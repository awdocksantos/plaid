version: '3.5'
services:
  nginx:
    image: nginx:1.17-alpine
    environment:
      - NGINX_SERVER_NAME=${NGINX_SERVER_NAME}
      - NGINX_PORT=${NGINX_PORT}
      - NGINX_ROOT=${NGINX_ROOT}
      - PHP_HOST=${PHP_HOST}
      - PHP_PORT=${PHP_PORT}
    working_dir: ${APP_DIR}
    entrypoint: ./docker/nginx/entrypoint.sh
    volumes:
      - .:${APP_DIR}
    networks:
      - local
    expose:
      - ${NGINX_PORT}
    ports:
      - ${NGINX_PORT}:${NGINX_PORT}
    depends_on:
      - php
      - code

  php:
    working_dir: ${APP_DIR}
    build:
      context: docker/php
      args:
        - PHP_VERSION=${PHP_VERSION}
        - CUSTOM_PHP_INI_FILE=${CUSTOM_PHP_INI_FILE}
        - MCRYPT_VERSION=${MCRYPT_VERSION}
        - APCU_VERSION=${APCU_VERSION}
        - AMQP_ENABLE=${AMQP_ENABLE}
        - AMQP_VERSION=${AMQP_VERSION}
        - PHPREDIS_VERSION=${PHPREDIS_VERSION}
        - XDEBUG_ENABLE=${XDEBUG_ENABLE}
        - XDEBUG_VERSION=${XDEBUG_VERSION}
        - MCRYPT_ENABLE=${MCRYPT_ENABLE}
        - GMP_ENABLE=${GMP_ENABLE}
        - LIBSODIUM_ENABLE=${LIBSODIUM_ENABLE}
        - LIBSODIUM_VERSION=${LIBSODIUM_VERSION}
        - LIBSODIUM_PHP_VERSION=${LIBSODIUM_PHP_VERSION}
        - GD_ENABLE=${GD_ENABLE}
        - PDO_ENABLE=${PDO_ENABLE}
        - PDO_MYSQL_ENABLE=${PDO_MYSQL_ENABLE}
        - PDO_PGSQL_ENABLE=${PDO_PGSQL_ENABLE}
        - PHPREDIS_ENABLE=${PHPREDIS_ENABLE}
        - INTL_ENABLE=${INTL_ENABLE}
        - ZIP_ENABLE=${ZIP_ENABLE}
        - OPCACHE_ENABLE=${OPCACHE_ENABLE}
        - APCU_ENABLE=${APCU_ENABLE}
        - COMPOSER_ALLOW_SUPERUSER=${COMPOSER_ALLOW_SUPERUSER}
        - COMPOSER_HOME=${COMPOSER_HOME}
    volumes:
      - .:${APP_DIR}
    networks:
      - local

  code:
    build:
      context: .
      args:
        - APP_DIR=${APP_DIR}
    volumes:
      - appdir:${APP_DIR}
    networks:
      - local

  postgress:
    image: postgres:12.1-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - local

  adminer:
    image: adminer:latest
    restart: always
    environment:
      ADMINER_DESIGN: ${ADMINER_DESIGN}
    ports:
      - 8084:8080
    networks:
      - local
    depends_on:
      - postgress

  redis:
    image: redis:5.0.7-alpine
    sysctls:
      net.core.somaxconn: 1024
    volumes:
      - "redisdata:/data"
    networks:
      - local

  exim:
    build:
      context: docker/exim
    environment:
      PRIMARY_HOST: mail.local
      ALLOWED_HOSTS: php ; 10.0.0.0/8 ; 172.16.0.0/12 ; 192.168.0.0/16
    volumes:
      - "eximdata:/var/spool/exim4"
    networks:
      - local

networks:
  local:
    name: ${NETWORK}

volumes:
  appdir:
    driver: local
  dbdata:
    driver: local
  redisdata:
    driver: local
  eximdata:
    driver: local

